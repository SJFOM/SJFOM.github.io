{"version":3,"file":"component---src-pages-blog-index-tsx-152a88e63b3529db6c1f.js","mappings":"+JAGWA,EAAc,sCACdC,EAAc,sCC6DzB,EA1Ce,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAErBC,GAAOC,EAAAA,EAAAA,IAAe,cAS5B,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UDlCc,mCCmCjBD,EAAAA,cAAAA,QAAAA,KAAQJ,EAAR,MAAsBE,EAAKI,KAAKC,aAAaC,OAC7CJ,EAAAA,cAAAA,SAAAA,CAAQC,UD/BS,oCC+BcH,EAAKI,KAAKC,aAAaC,OACtDJ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDlCU,mCCmCZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAWP,GACbM,EAAAA,cAACK,EAAAA,GAAD,CAAMC,GAAG,IAAIL,UAAWN,GAAxB,SAIFK,EAAAA,cAAAA,KAAAA,CAAIC,UAAWP,GACbM,EAAAA,cAACK,EAAAA,GAAD,CAAMC,GAAG,SAASL,UAAWN,GAA7B,UAIFK,EAAAA,cAAAA,KAAAA,CAAIC,UAAWP,GACbM,EAAAA,cAACK,EAAAA,GAAD,CAAMC,GAAG,QAAQL,UAAWN,GAA5B,WAMNK,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDxDS,iCCwDYL,GACxBC,M,8DCnBT,UAnCiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACEE,EAAAA,cAACO,EAAAA,EAAD,CAAQX,UAAU,iBAEdE,EAAKU,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACpBX,EAAAA,cAAAA,UAAAA,CAASY,IAAKD,EAAKE,IACjBb,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACK,EAAAA,GAAD,CAAMC,GAAE,SAAWK,EAAKG,MACrBH,EAAKI,YAAYX,QAGtBJ,EAAAA,cAAAA,IAAAA,KAAAA,WAAYW,EAAKI,YAAYC,MAC7BhB,EAAAA,cAAAA,KAAAA","sources":["webpack://samsite/./src/components/layout.module.css","webpack://samsite/./src/components/layout.tsx","webpack://samsite/./src/pages/blog/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--eLBMS\";\nexport var heading = \"layout-module--heading--8VjLO\";\nexport var navLinkItem = \"layout-module--nav-link-item--pfCo2\";\nexport var navLinkText = \"layout-module--nav-link-text--ac2nV\";\nexport var navLinks = \"layout-module--nav-links--EROwB\";\nexport var siteTitle = \"layout-module--site-title--5N6mf\";","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle\n} from './layout.module.css'\n\ninterface pageData {\n  pageTitle: string\n  children: React.ReactNode\n};\n\n/*\nUsing {} for the pageTitle and children variables is a JavaScript technique \ncalled destructuring. It’s basically a shortcut for defining variables \nbased on an object’s properties. It’s like saying, “Take the object that \ngets passed into this function, and unpack its pageTitle and children \nproperties into their own variables.”\n*/\nconst Layout = ({ pageTitle, children }: pageData) => {\n\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  return (\n    <div className={container}>\n      <title>{pageTitle} | {data.site.siteMetadata.title}</title>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/about\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}>\n              Blog\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport Layout from \"../../components/layout\"\n\nconst BlogPage = ({ data }) => {\n  return (\n    <Layout pageTitle=\"My Blog Posts\">\n      {\n        data.allMdx.nodes.map((node: any) => (\n          <article key={node.id}>\n            <h2>\n              <Link to={`/blog/${node.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h2>\n            <p>Posted: {node.frontmatter.date}</p>\n            <br></br>\n          </article>\n        ))\n      }\n    </Layout >\n  );\n};\n\nexport const query = graphql`\nquery {\n    allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"DD MMMM, YYYY\")\n          title\n        }\n        id\n        slug\n      }\n    }\n  }\n  `\n\nexport default BlogPage;"],"names":["navLinkItem","navLinkText","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","Layout","allMdx","nodes","map","node","key","id","slug","frontmatter","date"],"sourceRoot":""}